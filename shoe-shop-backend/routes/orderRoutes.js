const express = require('express');
const router = express.Router();
const db = require('../config/db'); // üëà (‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ db ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô .promise())

// POST /api/orders - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
router.post('/', async (req, res) => {
  // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Frontend
  const {
    user_id,
    customer_name,
    shipping_address,
    phone,
    total_price,
    items,
  } = req.body;

  // (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!) ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ 'db' ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Transaction
  
  try {
    // --- 2. ‡πÄ‡∏£‡∏¥‡πà‡∏° Transaction ---
    await db.beginTransaction(); // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'

    // --- 3. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å "‡πÉ‡∏ö‡∏õ‡∏∞‡∏´‡∏ô‡πâ‡∏≤" (‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders) ---
    const orderSql = `
      INSERT INTO orders (user_id, customer_name, shipping_address, phone, total_price) 
      VALUES (?, ?, ?, ?, ?)
    `;
    const [orderResult] = await db.query(orderSql, [ // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'
      user_id,
      customer_name,
      shipping_address,
      phone,
      total_price,
    ]);

    const newOrderId = orderResult.insertId;

    // --- 4. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" (‡∏ï‡∏≤‡∏£‡∏≤‡∏á order_items) ---
    const itemPromises = items.map(item => {
      const itemSql = `
        INSERT INTO order_items (order_id, product_id, quantity, size, price_at_purchase)
        VALUES (?, ?, ?, ?, ?)
      `;
      return db.query(itemSql, [ // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'
        newOrderId,
        item.product_id,
        item.quantity,
        item.size,
        item.price_at_purchase,
      ]);
    });

    await Promise.all(itemPromises);

    // --- 5. (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (cart_items) ‡∏Ç‡∏≠‡∏á User ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ ---
    if (user_id) {
      const clearCartSql = "DELETE FROM cart_items WHERE user_id = ?";
      await db.query(clearCartSql, [user_id]); // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'
    }

    // --- 6. ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ---
    await db.commit(); // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'
    res.status(201).json({ 
      message: 'Order created successfully', 
      orderId: newOrderId 
    });

  } catch (err) {
    // --- 7. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏û‡∏±‡∏á ---
    await db.rollback(); // üëà (‡πÅ‡∏Å‡πâ!) ‡πÉ‡∏ä‡πâ 'db'
    console.error("Error creating order: ", err);
    res.status(500).json({ error: "Failed to create order" });
  } 
  // (‡πÄ‡∏£‡∏≤‡∏•‡∏ö .finally ‡πÅ‡∏•‡∏∞ .release() ‡∏ó‡∏¥‡πâ‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ 'db' ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà pool)
});

module.exports = router;