import React, { useContext, useState, useEffect } from 'react';
import { getAuth, signInWithEmailAndPassword,createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';
import { auth } from '../firebase'; // üëà

const AuthContext = React.createContext();

export function useAuth() {
  return useContext(AuthContext);
}

export function AuthProvider({ children }) {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  function signup(email, password) {
    return createUserWithEmailAndPassword(auth, email, password);
  }
  function login(email, password) {
    return signInWithEmailAndPassword(auth, email, password);
  }
  function logout() {
    return signOut(auth);
  }

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {
      if (firebaseUser) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ user ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏ô Firebase
        try {
          const response = await fetch(`http://localhost:3001/api/users/${firebaseUser.uid}`);
          
          if (response.ok) { 
            const userData = await response.json(); // ‡∏à‡∏∞‡πÑ‡∏î‡πâ { id, email, role }
            setUser({
              uid: firebaseUser.uid,
              email: firebaseUser.email,
              id: userData.id,      //  ‡πÑ‡∏î‡πâ id ‡∏à‡∏≤‡∏Å MySQL
              role: userData.role,  //  ‡πÑ‡∏î‡πâ role ‡∏à‡∏≤‡∏Å MySQL
            });
          } else {
            // ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ (404 Not Found)
            // (‡πÄ‡∏ä‡πà‡∏ô User ‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô User ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô DB)
            // ‡πÉ‡∏´‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Firebase
            console.warn("User found in Firebase, but not in MySQL DB.");
            setUser({
              uid: firebaseUser.uid,
              email: firebaseUser.email,
              id: null,   //  id ‡πÄ‡∏õ‡πá‡∏ô null
              role: null, //  ‡πÄ‡∏õ‡πá‡∏ô null
            });
          }

        } catch (error) {
          console.error("Failed to fetch user data:", error);
          setUser(firebaseUser); // ‡∏ñ‡πâ‡∏≤ API ‡∏û‡∏±‡∏á ‡∏Å‡πá‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Firebase
        }
      } else {
        // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        setUser(null);
      }
      setLoading(false);
    });

    return unsubscribe; 
  }, []);

  const value = {
    user,
    signup,
    login,
    logout
  };

  // !loading && children ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ user ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏≠‡∏õ
  return (
    <AuthContext.Provider value={value}>
      {!loading && children}
    </AuthContext.Provider>
  );
};